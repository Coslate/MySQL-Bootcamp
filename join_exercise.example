-- Create Schema
CREATE TABLE students(
    id INT AUTO_INCREMENT PRIMARY KEY,
    first_name VARCHAR(100)
);
 
CREATE TABLE papers(
    id INT AUTO_INCREMENT PRIMARY KEY,
    title VARCHAR(100),
    grade DECIMAL(8,2),
    student_id INT,
    FOREIGN KEY(student_id) 
        REFERENCES students(id)
        ON DELETE CASCADE
);

INSERT INTO students (first_name) VALUES
('Caleb'), ('Samantha'), ('Raj'), ('Carlos'), ('Lisa');

INSERT INTO papers (student_id, title, grade) VALUES
(1, 'My First Book Report', 60),
(1, 'My Second Book Report', 75),
(2, 'Russian Lit Through The Ages', 94),
(2, 'De Montaigne and The Art of The Essay', 98),
(4, 'Borges and Magical Realism', 89);

-- Print this
+------------+---------------------------------------+-------+
| first_name | title                                 | grade |
+------------+---------------------------------------+-------+
| Samantha   | De Montaigne and The Art of The Essay | 98.00 |
| Samantha   | Russian Lit Through The Ages          | 94.00 |
| Carlos     | Borges and Magical Realism            | 89.00 |
| Caleb      | My Second Book Report                 | 75.00 |
| Caleb      | My First Book Report                  | 60.00 |
+------------+---------------------------------------+-------+

SELECT 
    first_name, 
    title, 
    grade 
FROM students 
INNER JOIN papers 
    ON papers.student_id=students.id 
ORDER BY grade DESC;

-- Print this
+------------+---------------------------------------+-------+
| first_name | title                                 | grade |
+------------+---------------------------------------+-------+
| Caleb      | My First Book Report                  | 60.00 |
| Caleb      | My Second Book Report                 | 75.00 |
| Samantha   | Russian Lit Through The Ages          | 94.00 |
| Samantha   | De Montaigne and The Art of The Essay | 98.00 |
| Raj        | NULL                                  |  NULL |
| Carlos     | Borges and Magical Realism            | 89.00 |
| Lisa       | NULL                                  |  NULL |
+------------+---------------------------------------+-------+

SELECT 
    first_name, 
    title, 
    grade 
FROM students 
LEFT JOIN papers 
    ON papers.student_id=students.id;

-- Print this
+------------+---------------------------------------+-------+
| first_name | title                                 | grade |
+------------+---------------------------------------+-------+
| Caleb      | My First Book Report                  | 60.00 |
| Caleb      | My Second Book Report                 | 75.00 |
| Samantha   | Russian Lit Through The Ages          | 94.00 |
| Samantha   | De Montaigne and The Art of The Essay | 98.00 |
| Raj        | MISSING                               |  0.00 |
| Carlos     | Borges and Magical Realism            | 89.00 |
| Lisa       | MISSING                               |  0.00 |
+------------+---------------------------------------+-------+

SELECT 
    first_name, 
    IFNULL(title, "MISSING") AS title, 
    IFNULL(grade, 0) AS grade 
FROM students 
LEFT JOIN papers 
    ON papers.student_id=students.id;

-- Print this
+------------+-----------+
| first_name | average   |
+------------+-----------+
| Samantha   | 96.000000 |
| Carlos     | 89.000000 |
| Caleb      | 67.500000 |
| Raj        |  0.000000 |
| Lisa       |  0.000000 |
+------------+-----------+

SELECT
    first_name, 
    IFNULL(AVG(grade), 0) AS average 
FROM students 
LEFT JOIN papers 
    ON papers.student_id=students.id 
GROUP BY first_name 
ORDER BY average DESC;

-- Print this
+------------+-----------+----------------+
| first_name | average   | passing_status |
+------------+-----------+----------------+
| Samantha   | 96.000000 | PASSING        |
| Carlos     | 89.000000 | PASSING        |
| Caleb      | 67.500000 | FAILING        |
| Raj        |  0.000000 | FAILING        |
| Lisa       |  0.000000 | FAILING        |
+------------+-----------+----------------+

SELECT 
    first_name, 
    IFNULL(AVG(grade), 0) AS average, 
    CASE 
        WHEN IFNULL(AVG(grade), 0) < 75 THEN "FAILING" 
        ELSE "PASSING"
    END AS passing_status 
FROM students 
LEFT JOIN papers 
    ON papers.student_id=students.id 
GROUP BY first_name 
ORDER BY average DESC;

